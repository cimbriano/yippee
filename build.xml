<?xml version="1.0"?>

<project name="yippee" basedir=".">

    <!-- define project vars -->
    <property name="project.root" location="${basedir}"/>
    <property name="lib.dir" value="${basedir}/lib"/>
    <property name="src.dir" value="${basedir}/src"/>
    <property name="tst.dir" value="${basedir}/test"/>
    <property name="out.dir" value="${basedir}/build"/>
    <property name="jar.dir" value="${basedir}/build"/>
    <property name="bootPort" value="9001"/>

    <target name="usage" description="Print the usage of ant scripts">
        <echo>
            2012, Yippee Project

            Summary of ant targets:

            1. project-test -DbootIp=[ip]

                [ip]: External ip (e.g., the one returned by ifconfig/ipconfig

                The project run target sets up four pastry nodes, at predefined ports:
                * 9001 for node 1 (bootstrap)
                * 9002 for node 2
                * 9003 for node 3
                * 9004 for node 4

                Refer to the README file for more information.
        </echo>

    </target>

    <!-- one of the many ways of doing so -->
    <property name="main-class" value="com.yippee.pastry.YippeeNode"/>

    <!-- We are going to make this modular -->
    <property name="server" value="tomcat"/>
    <property name="jetty.home"
              value="/media/w7/Projects/UPenn/cis555/jetty-6.1.26"/>
    <property name="tomcat.home"
              value="/home/nikos/Desktop/dsk/latest/apache-tomcat-5.5.35"/>

    <condition property="params.set">
        <and>
            <isset property="bootIp"/>
        </and>
    </condition>

    <target name="check">
        <fail unless="params.set">
            Must specify the parameter bootIp: Run "ant [target]
            -DbootIp=[external ip]
        </fail>
    </target>

    <path id="classpath">
        <fileset dir="${lib.dir}" includes="**/*.jar"/>
    </path>
    <path id="application" location="${jar.dir}/${ant.project.name}.jar"/>

    <target name="sanity-check" depends="check">
        <echo>" Root:. . . . .${project.root}"</echo>
        <echo>" Lib: . . . . .${lib.dir}"</echo>
        <echo>" Pastry Ip: . .${bootIp}"</echo>
        <echo>" Pastry Port: .${bootPort}"</echo>
    </target>

    <target name="clean">
        <delete dir="${out.dir}"/>
    </target>

    <target name="compile">
        <mkdir dir="${out.dir}/classes"/>
        <javac srcdir="${src.dir}" destdir="${out.dir}/classes"
               classpathref="classpath"/>
    </target>

    <target name="jar" depends="compile">
        <mkdir dir="${jar.dir}"/>
        <jar destfile="${jar.dir}/${ant.project.name}.jar"
             basedir="${out.dir}/classes">
            <manifest>
                <attribute name="Main-Class" value="${main-class}"/>
            </manifest>
        </jar>
    </target>

    <target name="run" depends="jar">
        <java fork="true" classname="${main-class}">
            <classpath>
                <path refid="classpath"/>
                <path refid="application"/>
            </classpath>
            <!-- in case we need to add arguments -->
            <arg value="${localPort}"/>
            <arg value="${bootIp}"/>
            <arg value="${bootPort}"/>
        </java>
    </target>

    <target name="project-clean" depends="clean,jar"
            description="Clear resources and build jar"/>

    <!-- start 4 applications in parallel -->
    <target name="project-run" depends="project-clean,sanity-check"
            description="Create 4 application nodes">
        <parallel>
            <antcall target="run">
                <param name="localPort" value="9001"/>
            </antcall>
            <antcall target="run">
                <param name="localPort" value="9002"/>
            </antcall>
            <antcall target="run">
                <param name="localPort" value="9003"/>
            </antcall>
            <antcall target="run">
                <param name="localPort" value="9004"/>
            </antcall>
        </parallel>
    </target>

    <!-- Run Tests -->

    <target name="Test" depends="jar" description="Run all tests">
        <junit printsummary="yes">
            <classpath>
                <path refid="classpath"/>
                <path refid="application"/>
            </classpath>

            <batchtest fork="yes">
                <fileset dir="${tst.dir}" includes="*Test.java"/>
            </batchtest>
        </junit>
    </target>

    <!-- ================================================================== -->
    <!--            Tomcat/Jetty targets (front-end deployment)             -->
    <!-- ================================================================== -->

    <target name="tomcat-startup">
        <java classname="org.apache.catalina.startup.Bootstrap" fork="yes">
            <jvmarg value="-Dcatalina.home=${tomcat.home}"/>
            <jvmarg value="-Xdebug"/>
            <jvmarg value="-Xrunjdwp:transport=dt_socket,address=8888,server=y,suspend=n"/>
            <arg value="start"/>
            <classpath>
                <fileset dir="${tomcat.home}">
                    <include name="bin/bootstrap.jar"/>
                </fileset>
            </classpath>
        </java>
    </target>

    <target name="tomcat-shutdown">
        <java classname="org.apache.catalina.startup.Bootstrap" fork="yes">
            <jvmarg value="-Dcatalina.home=${tomcat.home}"/>
            <arg value="stop"/>
            <classpath>
                <fileset dir="${tomcat.home}">
                    <include name="bin/bootstrap.jar"/>
                </fileset>
            </classpath>
        </java>
    </target>

</project>